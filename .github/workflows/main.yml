# This is a basic workflow to help you get started with Actions

name: Pc/Desktop + Release

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ riolubfskin ]
  pull_request:
    branches: [ riolubfskin ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  PROJECT_NAME: VsDavePlusReformed
  REPO_PATH:  MatthewFro191919/Dave-and-Bambi-Plus-Reformed-riolubfskins-Mobile-4

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  get-commit-hash:
    runs-on: ubuntu-latest
    outputs:
      commit_hash: ${{ steps.get_commit_hash.outputs.COMMIT_HASH }}
    steps:
      - name: Check Repository
        run: |
          echo "GITHUB_REPOSITORY: $GITHUB_REPOSITORY"
          echo "REPO_PATH: ${{ env.REPO_PATH }}"
          if [[ "$GITHUB_REPOSITORY" != "${{ env.REPO_PATH }}" ]]; then
            echo "Doesn't seem to be correct, returning SIGABRT..."
            exit 6
          else
            echo "Seems to be correct..."
          fi

      - name: Get latest commit hash
        id: get_commit_hash
        run: |
          commit_hash=${GITHUB_SHA::7}
          echo "Latest commit hash is $commit_hash"
          echo "::set-output name=COMMIT_HASH::$commit_hash"

  Desktop:
    name: ${{ matrix.name }}
    needs: get-commit-hash
    strategy:
      matrix:
        include:
          - name: Windows
            os: windows-latest
            buildArgs: "windows -D officialBuild"
            setupCommand: .\"setup/windows.bat"
            artifactName: windowsBuild
            artifactPath: "export/release/windows/bin/*.exe"
    uses: ./.github/workflows/build.yml
    with:
        name: ${{ matrix.name }}
        os: ${{ matrix.os }}
        setupCommand: ${{ matrix.setupCommand }}
        buildArgs: ${{ matrix.buildArgs }}
        artifactName: ${{ matrix.artifactName }}
        artifactPath: ${{ matrix.artifactPath }}
  Releaser:
    needs: [get-commit-hash, Desktop]
    runs-on: windows-latest
    permissions: write-all
    steps:
      - name: Download Windows Build
        uses: actions/download-artifact@main
        with:
           name: windowsBuild
      - name: Zip iOS Build For Release
        run: zip -r /home/runner/${{ env.PROJECT_NAME }}-Windows.zip ${{ github.workspace }}/${{ env.PROJECT_NAME }}.exe
      - name: Publish The Release
        uses: softprops/action-gh-release@v2
        with:
          name: "${{ needs.get-commit-hash.outputs.commit_hash }}"
          tag_name: "${{ needs.get-commit-hash.outputs.commit_hash }}"
          prerelease: true
          files: |
           /${{ matrix.artifactPath }}
